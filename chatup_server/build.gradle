plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}

group = 'com.chatup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

testSets{
    integrationTest
}

ext {
    set('testcontainersVersion', "1.17.4")
}

dependencies {
    implementation "org.hibernate.orm:hibernate-core:6.0.2.Final"
    implementation "org.hibernate.search:hibernate-search-mapper-orm-orm6:6.1.7.Final"
    implementation "org.hibernate.search:hibernate-search-backend-elasticsearch:6.1.7.Final"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'com.fasterxml.jackson:jackson-bom'
    testImplementation "org.mockito:mockito-core:4.7.0"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "org.testcontainers:testcontainers:1.17.6"
    testImplementation "org.testcontainers:postgresql"
    testImplementation 'org.testcontainers:rabbitmq'
    testImplementation "org.testcontainers:elasticsearch"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

